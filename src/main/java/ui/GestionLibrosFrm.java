/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import dataAccess.exceptions.NonexistentEntityException;
import domain.BibliotecarioEntity;
import domain.EstadoLibro;
import domain.LibroEntity;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author xfs85
 */
public class GestionLibrosFrm extends javax.swing.JFrame {

    /**
     * Creates new form GestionLibrosFrm
     */
    List<LibroEntity> libros;
    DefaultTableModel tableModelBooks = new DefaultTableModel();
    LibroEntity libroModel = new LibroEntity();
    private List<LibroEntity> listaTabla;
    
    public GestionLibrosFrm() {
        initComponents();
        tableModelBooks.addColumn("ID");
        tableModelBooks.addColumn("Titulo");
        tableModelBooks.addColumn("Autor");
        tableModelBooks.addColumn("Estado");
        
        librosTable.setModel(tableModelBooks);
        
      
            
            TableColumn columnID = librosTable.getColumnModel().getColumn(0);
            
            columnID.setResizable(false);
            
            
            TableColumn columnTitle = librosTable.getColumnModel().getColumn(1);
            
            columnTitle.setResizable(false);
        
        TableColumn columnAutor = librosTable.getColumnModel().getColumn(2);
            
            columnAutor.setResizable(false);
            
            TableColumn columnEstado = librosTable.getColumnModel().getColumn(3);
            
            columnEstado.setResizable(false);
            
        cargarLibros();
    }

    private void cargarLibros() {
        List<LibroEntity> libros = libroModel.cargarLibros();
        this.libros = libros; 
        tableModelBooks.setRowCount(0);
        
        for (LibroEntity libro : libros) {
            Object[] row = {
                libro.getId(),
                libro.getTitulo(),
                libro.getAutor(),
                libro.getEstado()
               
            };

            tableModelBooks.addRow(row);

        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnVolver = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        librosTable = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtLibro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Gesti√≥n de Libros");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVolver.setContentAreaFilled(false);
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        jPanel1.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 13, 40, 30));

        btnAgregar.setBorder(null);
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 193, 110, 40));

        librosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(librosTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 350, 350));

        btnEditar.setBorder(null);
        btnEditar.setContentAreaFilled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(522, 266, 105, 37));

        btnEliminar.setBorder(null);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 339, 110, 35));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Titulo del Libro:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 140, 20));

        txtLibro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLibroKeyReleased(evt);
            }
        });
        jPanel1.add(txtLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 210, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GestionLibros.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.dispose();
        new MainPageFrm().setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
       this.dispose();
       new AgregaLibroFrm().setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
          int selectedRow = librosTable.getSelectedRow();

                if (selectedRow != -1) {
                    LibroEntity libroAEditar= new LibroEntity();
                    
                    libroAEditar.setId((Long) librosTable.getValueAt(selectedRow, 0));
                    libroAEditar.setTitulo(String.valueOf(librosTable.getValueAt(selectedRow, 1))); 
                    libroAEditar.setAutor(String.valueOf(librosTable.getValueAt(selectedRow, 2)));
                    libroAEditar.setEstado((EstadoLibro) librosTable.getValueAt(selectedRow, 3));
                    
                    
                  
                    
                    EditarLibroFrm taskEditor = new EditarLibroFrm(libroAEditar);

                    taskEditor.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione una tarea para editar");
                }           

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
         int selectedRow = librosTable.getSelectedRow();

                if (selectedRow != -1) {
                    LibroEntity libroAEliminar= new LibroEntity();
                    
                    libroAEliminar.setId((Long) librosTable.getValueAt(selectedRow, 0));
                    libroAEliminar.setTitulo(String.valueOf(librosTable.getValueAt(selectedRow, 1))); 
                    libroAEliminar.setAutor(String.valueOf(librosTable.getValueAt(selectedRow, 2)));
                    libroAEliminar.setEstado((EstadoLibro) librosTable.getValueAt(selectedRow, 3));
                    
                    DTOAgregarLibro libroDTO = new DTOAgregarLibro(libroAEliminar.getId(), libroAEliminar.getTitulo(), libroAEliminar.getAutor());
                    
             try {
                 BibliotecarioEntity bl = new BibliotecarioEntity();
                 bl.eliminaLibro(libroDTO);
             } catch (NonexistentEntityException ex) {
                 Logger.getLogger(GestionLibrosFrm.class.getName()).log(Level.SEVERE, null, ex);
             }
                    JOptionPane.showMessageDialog(null, "Se ha eliminado el libro correctamente");
                    this.dispose();
                    new GestionLibrosFrm().setVisible(true);
                    
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione una tarea para eliminar");
                }  
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtLibroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLibroKeyReleased
        cargarTablaLibros();
    }//GEN-LAST:event_txtLibroKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable librosTable;
    private javax.swing.JTextField txtLibro;
    // End of variables declaration//GEN-END:variables


    private void cargarTablaLibros(){
        DefaultTableModel tabla = (DefaultTableModel) librosTable.getModel();
        
        String titulos[] = {"ID", "Titulo", "Autor", "Estado"};
        tabla.setColumnIdentifiers(titulos);
        
        listaTabla = libroModel.findLibroEntityEntities();
        List<LibroEntity> aux = new ArrayList<>();
        
        if(listaTabla != null){
            if(!txtLibro.getText().equalsIgnoreCase("")){
                for(LibroEntity lib : listaTabla){
                    String titulo = lib.getTitulo();
                    
                    if(titulo.toUpperCase().contains(txtLibro.getText().toUpperCase())){
                        aux.add(lib);
                    }
                }
                listaTabla = aux;
            }
            tabla.setRowCount(0);
            for(LibroEntity lib : listaTabla){
                Object[] objeto = {lib.getId(), lib.getTitulo(), lib.getAutor(), lib.getEstado()};
                tabla.addRow(objeto);
            }
            librosTable.setModel(tabla);
        }
    }

}
